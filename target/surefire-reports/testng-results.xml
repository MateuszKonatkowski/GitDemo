<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="4" passed="2" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-09-30T21:03:57 CEST" name="All Test Suite" finished-at="2023-09-30T21:05:17 CEST" duration-ms="80225">
    <groups>
      <group name="Smoke">
        <method signature="SelectDropdownListDemoTest.select_SelectValue_Should_Show_Message()[pri:0, instance:TestComponents.BasicTests.SelectDropdownListDemoTest@433defed]" name="select_SelectValue_Should_Show_Message" class="TestComponents.BasicTests.SelectDropdownListDemoTest"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2023-09-30T21:03:57 CEST" name="test" finished-at="2023-09-30T21:05:17 CEST" duration-ms="80225">
      <class name="TestComponents.BasicTests.SelectDropdownListDemoTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:TestComponents.BasicTests.SelectDropdownListDemoTest@433defed]" started-at="2023-09-30T21:03:57 CEST" name="setUp" finished-at="2023-09-30T21:04:22 CEST" duration-ms="25596" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="multiSelect_SelectAllValues_Should_Show_All_Message()[pri:0, instance:TestComponents.BasicTests.SelectDropdownListDemoTest@433defed]" started-at="2023-09-30T21:04:22 CEST" name="multiSelect_SelectAllValues_Should_Show_All_Message" finished-at="2023-09-30T21:04:28 CEST" duration-ms="6126" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Options selected are : California,Florida,New Jersey,New York,Ohio,Texas,Pennsylvania,Washington] but found [Options selected are : Florida,New Jersey,New York,Ohio,Texas,Pennsylvania,Washington]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Options selected are : California,Florida,New Jersey,New York,Ohio,Texas,Pennsylvania,Washington] but found [Options selected are : Florida,New Jersey,New York,Ohio,Texas,Pennsylvania,Washington]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at TestComponents.BasicTests.SelectDropdownListDemoTest.multiSelect_SelectAllValues_Should_Show_All_Message(SelectDropdownListDemoTest.java:50)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiSelect_SelectAllValues_Should_Show_All_Message -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestComponents.BasicTests.SelectDropdownListDemoTest@433defed]" started-at="2023-09-30T21:04:28 CEST" name="tearDown" finished-at="2023-09-30T21:04:29 CEST" duration-ms="418" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:TestComponents.BasicTests.SelectDropdownListDemoTest@433defed]" started-at="2023-09-30T21:04:29 CEST" name="setUp" finished-at="2023-09-30T21:04:34 CEST" duration-ms="5521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:TestComponents.BasicTests.SelectDropdownListDemoTest@433defed]" started-at="2023-09-30T21:04:38 CEST" name="setUp" finished-at="2023-09-30T21:04:51 CEST" duration-ms="12606" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:TestComponents.BasicTests.SelectDropdownListDemoTest@433defed]" started-at="2023-09-30T21:04:53 CEST" name="setUp" finished-at="2023-09-30T21:05:03 CEST" duration-ms="9649" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="multiSelect_Status_Should_Multiple()[pri:0, instance:TestComponents.BasicTests.SelectDropdownListDemoTest@433defed]" started-at="2023-09-30T21:05:03 CEST" name="multiSelect_Status_Should_Multiple" finished-at="2023-09-30T21:05:05 CEST" duration-ms="1561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiSelect_Status_Should_Multiple -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestComponents.BasicTests.SelectDropdownListDemoTest@433defed]" started-at="2023-09-30T21:05:05 CEST" name="tearDown" finished-at="2023-09-30T21:05:06 CEST" duration-ms="871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:TestComponents.BasicTests.SelectDropdownListDemoTest@433defed]" started-at="2023-09-30T21:05:06 CEST" name="setUp" finished-at="2023-09-30T21:05:14 CEST" duration-ms="8482" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="select_SelectValue_Should_Show_Message()[pri:0, instance:TestComponents.BasicTests.SelectDropdownListDemoTest@433defed]" started-at="2023-09-30T21:05:14 CEST" name="select_SelectValue_Should_Show_Message" finished-at="2023-09-30T21:05:16 CEST" duration-ms="2340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- select_SelectValue_Should_Show_Message -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestComponents.BasicTests.SelectDropdownListDemoTest@433defed]" started-at="2023-09-30T21:05:16 CEST" name="tearDown" finished-at="2023-09-30T21:05:17 CEST" duration-ms="417" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TestComponents.BasicTests.SelectDropdownListDemoTest -->
    </test> <!-- test -->
  </suite> <!-- All Test Suite -->
</testng-results>
